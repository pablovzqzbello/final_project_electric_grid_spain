
# INSTRUCCIONES

#   CUESTIONES A TENER EN CUENTA EN CUANTO A LA API Y LA EXTRACCIÓN DE DATOS:

# - DE ACUERDO CON LAS INSTRUCCIONES RECIBIDAS, NOS TENEMOS QUE CENTRAR EN LOS ELEMENTOS: BALANCE, DEMANDA, GENERACIÓN E INTERCAMBIO

# - BALANCE: SOLAMENTE TIENE UN WIDGET, BALANCE-ELÉCTRICO, Y EXPRESA LA CANTIDAD DE ELECTRICIDAD GENERADA AL DÍA Y QUÉ SISTEMA LA PRODUJO (EÓLICA, HIDRÁULICA, ETC.)

# - DEMANDA: DISPONEMOS DE DIFERENTES WIDGETS, CON ABUNDANTE INFORMACIÓN DE LA DEMANDA, PERO NOS CENTRAREMOS EN EL WIDGET LLAMADO EVOLUCIÓN, QUE EXPRESA LA EVOLUCIÓN DE LA DEMANDA A 
#   LO LARGO DEL TIEMPO. EL RESTO DE WIDGETS NO SON UTILIZADOS ACTUALMENTE, AUNQUE NO SE DESCARTA SU USO PARA VERSIONES POSTERIORES EN CASO DE QUERER IMPLEMENTAR MÁS FUNCIONALIDADES
#   EN STREAMLIT

# - GENERACIÓN: LOS WIDGETS DE GENERACIÓN SON TAMBIÉN DIVERSOS, Y PODRÍAN PROPORCIONAR INFORMACIÓN VALIOSA; NO OBSTANTE, DESPUÉS DE TESTEAR LOS MÁS INTERESANTES, HEMOS PERCIBIDO QUE MUCHOS
#   NO FUNCIONAN REALMENTE Y NOS DAN ERRORES RELACIONADOS CON LA PROPIA BASE DE DATOS DE LA API (500-502). NOS CENTRAREMOS POR AHORA EN ESTRUCTURA-GENERACIÓN Y EN
#   NO-RENOVABLES-DETALLE-EMISIONES-CO2. NO DESCARTAMOS EMPLEAR MÁS WIDGETS MÁS ADELANTE. ESPECIALMENTE RELEVANTE ES EL WIDGET DE ESTRUCTURA-GENERACIÓN DADO QUE PROPORCIONA
#   PRÁCTICAMENTE LA MISMA INFORMACIÓN QUE BALANCE, INCLUSO PROFUNDIZANDO EN EL TIPO DE TECNOLOGÍA USADO. SERÍA RELEVANTE TENER EN CUENTA ESTE ASPECTO A LA HORA DE FORMULAR LA BDD

# - INTERCAMBIO: DE LOS WIDGETS DISPONIBLES, USAREMOS SOLO TODAS-FRONTERAS-FÍSICAS

# ES IMPORTANTE TENER TODOS ESTOS PARÁMETROS EN CUENTA PARA PODER ESTRUCTURAR POSTERIORMENTE LA BDD DE LA FORMA MÁS CORRECTA, ENTENDIENDO LAS ENTIDADES Y SUS ATRIBUTOS PARA GENERAR TABLAS
# Y COLUMNAS QUE SEAN COHERENTES Y ESTÉN COHESIONADAS PARA HACER FUTURAS QUERIES CON FACILIDAD

# A CONTINUACIÓN AÑADO AQUÍ UNA POSIBLE ESTRUCTURA PARA LA BASE DE DATOS DE SQL. QUEDA EN TESTEO YA QUE ESTÁ SUJETA
# A MODIFICACIONES. DADO QUE QUEDA PENDIENTE EL MODELADO DE LOS DATOS Y EL EDA. NO OBSTANTE RESULTA PERTINENTE AÑADIRLA:

# CREATE DATABASE IF NOT EXISTS red_electrica_espana

# CREATE TABLE demanda_energia (
    fecha DATE PRIMARY KEY,
    valor_demanda_MW FLOAT,
    fecha_extraccion DATETIME);

# CREATE TABLE balance_energia (
    fecha DATE,
    valor_balance_GW FLOAT,
    energia VARCHAR(50),
    fecha_extraccion DATETIME,
    PRIMARY KEY (fecha, energia),
    FOREIGN KEY (fecha) REFERENCES demanda_energia(fecha));


# CREATE TABLE transacciones_energia (
    pais VARCHAR(50),
    tipo_transaccion VARCHAR(20),
    valor_GW FLOAT,
    fecha DATE,
    fecha_extraccion DATETIME,
    PRIMARY KEY (pais, tipo_transaccion, fecha),
    FOREIGN KEY (fecha) REFERENCES demanda_energia(fecha));


# CREATE TABLE generacion_energia (
    fecha DATE,
    valor_generacion_GW FLOAT,
    energia VARCHAR(50),
    tipo_tecnología VARCHAR(50),
    fecha_extraccion DATETIME,
    PRIMARY KEY (fecha, energia, tipo_tecnología),
    FOREIGN KEY (fecha) REFERENCES demanda_energia(fecha));

# CREATE TABLE tipo_energia (
    energia VARCHAR(50) PRIMARY KEY,
    tipo_tecnología VARCHAR(50));


# ALTER TABLE balance_energia
# ADD FOREIGN KEY (energia) REFERENCES tipo_energia(energia);

# ALTER TABLE generacion_energia
# ADD FOREIGN KEY (energia) REFERENCES tipo_energia(energia);

# COMO SE PUEDE APRECIAR EN LA ESTRUCTURA SQL PRESENTADA PARA RESPETAR LA INTEGRIDAD DE EXTRACCION Y DE DATOS DE CADA
# TABLA, HEMOS REALIZADO CONEXIONES MEDIANTE PRIMARY KEYS COMPUESTAS. DE ESTE MODO, SE GARANTIZA QUE HAYA UNA PK ORIGINAL
# COMBINADA QUE NOS PERITA REALIZAR CONEXIONES MEDIANTE QUERYS. QUEDA PENDIENTE A LOS RESPONSABLES CREAR LA BBDD Y LA CREACIÓN
# DE UN CÓDIGO QUE NOS PERMITA SUBIR LAS TABLAS Y POSTERIORMENTE CÓDIGO QUE NOS PERMITA REALIZAR QUERYS.